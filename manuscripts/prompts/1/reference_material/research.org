* THE TEN COMMANDS

** LOGLINE: In a dystopian future, a Moses-like person is offered a means of restarting human civilization anew. The commandments are earned, not given; instead of stone tablets, this person is given a terminal, cursor blinking at the shell prompt. From here, our protagonist must figure how to get this terminal to reveal its secrets.





** The Bibical Ten Commandments
- I am the Lord Thy God
- Thou shalt have no other gods before me
- Thou shalt not take the name of thy God in vain
- Remember the sabbath, to keep it holy
- Honor thy father and thy mother
- Thou shalt not murder
- Thou shalt not commmit adultery
- Thou shalt not steal
- Thou shalt not bear false witness against thy neighbour
- Thou shalt not covet thy neighbour's wife
- or his slaves, or his animals, or anything of thy neighbour
- You shall set up these stones, which I command you today, on Mount Gerizim


** The 10 Unix Commands
- From this: [link](https://homepage.cs.uri.edu/~thenry/resources/unix_art/ch01s06.html):


    - Rule of Modularity: Write simple parts connected by clean interfaces.

    - Rule of Clarity: Clarity is better than cleverness.

    - Rule of Composition: Design programs to be connected to other programs.

    - Rule of Separation: Separate policy from mechanism; separate interfaces from engines.

    - Rule of Simplicity: Design for simplicity; add complexity only where you must.

    - Rule of Parsimony: Write a big program only when it is clear by demonstration that nothing else will do.

    - Rule of Transparency: Design for visibility to make inspection and debuggingeasier.

    - Rule of Robustness: Robustness is the child of transparency and simplicity.

    - Rule of Representation: Fold knowledge into data so program logic can be stupid and robust.

    - Rule of Least Surprise: In interface design, always do the least surprising thing.

    - Rule of Silence: When a program has nothing surprising to say, it should say nothing.

    - Rule of Repair: When you must fail, fail noisily and as soon as possible.

    - Rule of Economy: Programmer time is expensive; conserve it in preference to machine time.

    - Rule of Generation: Avoid hand-hacking; write programs to write programs when you can.

    - Rule of Optimization: Prototype before polishing. Get it working before you optimize it.

    - Rule of Diversity: Distrust all claims for “one true way”.

    - Rule of Extensibility: Design for the future, because it will be here sooner than you think.
       
    

*** Notes to self:
    * Need to map the Unix commands to the Bibical commandments
    * Which Unix commands stay, and what go? 
    * What is the background context?  
    * Who is this 'Moses-like person'?
    * What is the structure of this piece?
    * How many words, upper limit?
